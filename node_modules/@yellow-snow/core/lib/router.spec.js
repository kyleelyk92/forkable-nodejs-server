"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var chai = require("chai");
var router_1 = require("./router");
var expect = chai.expect;
var TestController = /** @class */ (function () {
    function TestController() {
    }
    TestController.prototype.hello = function () {
        // do something
    };
    return TestController;
}());
// tslint:disable-next-line:max-classes-per-file
var TestRoute = /** @class */ (function () {
    function TestRoute(controller, method) {
        this.controller = controller;
        this.method = method;
    }
    return TestRoute;
}());
// tslint:disable-next-line:max-classes-per-file
var TestRouter = /** @class */ (function (_super) {
    __extends(TestRouter, _super);
    function TestRouter(routes) {
        return _super.call(this, routes) || this;
    }
    TestRouter.prototype.init = function () {
        // do something
    };
    return TestRouter;
}(router_1.Router));
describe("Router", function () {
    describe("TestRouter", function () {
        it("should take an instance of TestRouter", function () {
            var route = new TestRoute(TestController, "hello");
            var routes = [route];
            var router = new TestRouter(routes);
            // tslint:disable-next-line:no-unused-expression
            expect(router).not.to.be.undefined;
        });
    });
});

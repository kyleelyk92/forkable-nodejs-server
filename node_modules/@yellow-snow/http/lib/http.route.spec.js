"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var chai = require("chai");
var _1 = require(".");
var http_route_1 = require("./http.route");
var expect = chai.expect;
var TestHttpController = /** @class */ (function (_super) {
    __extends(TestHttpController, _super);
    function TestHttpController() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TestHttpController.prototype.doSomething = function () {
        // do something
    };
    return TestHttpController;
}(_1.HttpController));
describe("HttpRoute", function () {
    it("should take a reference to TestController class and one of it's methods", function () {
        var route = new http_route_1.HttpRoute("/", "get", TestHttpController, "doSomething");
        // tslint:disable-next-line:no-unused-expression
        expect(route).not.to.be.undefined;
    });
});
